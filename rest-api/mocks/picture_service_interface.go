// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	dto "github.com/depromeet/everybody-backend/rest-api/dto"
	mock "github.com/stretchr/testify/mock"
)

// PictureServiceInterface is an autogenerated mock type for the PictureServiceInterface type
type PictureServiceInterface struct {
	mock.Mock
}

// GetAllPictures provides a mock function with given fields: userID
func (_m *PictureServiceInterface) GetAllPictures(userID int) (dto.PicturesDto, error) {
	ret := _m.Called(userID)

	var r0 dto.PicturesDto
	if rf, ok := ret.Get(0).(func(int) dto.PicturesDto); ok {
		r0 = rf(userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(dto.PicturesDto)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPicture provides a mock function with given fields: pictureID
func (_m *PictureServiceInterface) GetPicture(pictureID int) (*dto.PictureDto, error) {
	ret := _m.Called(pictureID)

	var r0 *dto.PictureDto
	if rf, ok := ret.Get(0).(func(int) *dto.PictureDto); ok {
		r0 = rf(pictureID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*dto.PictureDto)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(pictureID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SavePicture provides a mock function with given fields: userID, pictureReq
func (_m *PictureServiceInterface) SavePicture(userID int, pictureReq *dto.PictureRequest) (*dto.PictureDto, error) {
	ret := _m.Called(userID, pictureReq)

	var r0 *dto.PictureDto
	if rf, ok := ret.Get(0).(func(int, *dto.PictureRequest) *dto.PictureDto); ok {
		r0 = rf(userID, pictureReq)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*dto.PictureDto)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int, *dto.PictureRequest) error); ok {
		r1 = rf(userID, pictureReq)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
