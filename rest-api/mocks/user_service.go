// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	dto "github.com/depromeet/everybody-backend/rest-api/dto"
	ent "github.com/depromeet/everybody-backend/rest-api/ent"

	mock "github.com/stretchr/testify/mock"
)

// UserService is an autogenerated mock type for the UserService type
type UserService struct {
	mock.Mock
}

// GetUser provides a mock function with given fields: id
func (_m *UserService) GetUser(id int) (*ent.User, error) {
	ret := _m.Called(id)

	var r0 *ent.User
	if rf, ok := ret.Get(0).(func(int) *ent.User); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ent.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SignUp provides a mock function with given fields: body
func (_m *UserService) SignUp(body *dto.SignUpRequest) (*ent.User, error) {
	ret := _m.Called(body)

	var r0 *ent.User
	if rf, ok := ret.Get(0).(func(*dto.SignUpRequest) *ent.User); ok {
		r0 = rf(body)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ent.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*dto.SignUpRequest) error); ok {
		r1 = rf(body)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
